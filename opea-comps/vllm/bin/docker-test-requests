#!/bin/bash

# Try different ways to connect to the server
echo "Trying localhost..."
curl -m 2 http://localhost:8000/health || echo "Failed to connect to localhost:8000"

echo -e "\nTrying 127.0.0.1..."
curl -m 2 http://127.0.0.1:8000/health || echo "Failed to connect to 127.0.0.1:8000"

echo -e "\nTrying container IP directly..."
# Get the container IP
CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -q --filter "ancestor=vllm-cpu-env"))
if [ -n "$CONTAINER_IP" ]; then
  echo "Container IP: $CONTAINER_IP"
  curl -m 2 http://$CONTAINER_IP:8000/health || echo "Failed to connect to $CONTAINER_IP:8000"
else
  echo "Could not determine container IP"
fi

echo -e "\nIf all connections failed, try restarting the container with:"
echo "docker run -it --rm -p 8000:8000 \\"
echo "  -v gemma-models:/root/.cache/huggingface \\"
echo "  -e HF_TOKEN=\$HF_TOKEN \\"
echo "  vllm-cpu-env \\"
echo "  --model google/gemma-2b \\"
echo "  --max-model-len 2048 \\"
echo "  --dtype float16 \\"
echo "  --device cpu \\"
echo "  --api-server"

echo -e "\nIf you want to try the completion API, use:"
echo "curl http://localhost:8000/v1/completions \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{\n    \"model\": \"google/gemma-2b\",\n    \"prompt\": \"Explain domain modeling in software development\",\n    \"max_tokens\": 256,\n    \"temperature\": 0.7\n  }'"